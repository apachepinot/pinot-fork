#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
name: Nightly Presto Pinot Docker Image Build and Publish

on:
  schedule:
    - cron: "10 10 * * *" # run at 0 AM UTC

jobs:
  generate-build-info:
    name: Generate Build Info
    runs-on: ubuntu-latest
    outputs:
      commit-id: ${{ steps.generate-build-info.outputs.commit-id }}
      tags: ${{ steps.generate-build-info.outputs.tags }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Generate Build Info
        id: generate-build-info
        run: |
          .github/workflows/scripts/docker/.presto_build_info_gen.sh
  build-presto-pinot-docker-image:
    name: Build Presto Pinot Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v2
        name: Set up QEMU
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Build and push the Docker image
        env:
          DOCKER_FILE_BASE_DIR: "docker/images/pinot-presto"
          DOCKER_IMAGE_NAME: "apachepinot/pinot-presto"
          BUILD_PLATFORM: "linux/amd64"
          PRESTO_GIT_URL: "https://github.com/prestodb/presto.git"
          PRESTO_BRANCH: "${{needs.generate-build-info.outputs.commit-id}}"
          TAGS: "${{needs.generate-build-info.outputs.tags}}"
        run: .github/workflows/scripts/docker/.presto_docker_image_build_and_push.sh
